name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight

jobs:
  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        npm install -g npm-audit

    - name: Run Bandit security scan
      run: |
        bandit -r src tests

    - name: Run Safety check
      run: |
        safety check

    - name: Run npm audit
      run: |
        cd src/frontend
        npm audit

    - name: Run Snyk security scan
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Advanced CI/CD Pipeline'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --suppression suppression.xml
          --failOnCVSS 7

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: python, javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:${{ github.sha }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Run Trivy vulnerability scanner for backend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:${{ github.sha }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Run kubesec scan
      uses: controlplaneio/kubesec@v2
      with:
        input: ./helm/templates/deployment.yaml

    - name: Run kubeaudit scan
      uses: Shopify/kubeaudit@v0.11.0
      with:
        input: ./helm/templates/

    - name: Run kube-score scan
      uses: zegl/kube-score@v1.10.0
      with:
        input: ./helm/templates/

    - name: Run kubeval scan
      uses: instrumenta/kubeval-action@master
      with:
        files: ./helm/templates/

    - name: Run conftest scan
      uses: instrumenta/conftest-action@v0.1.0
      with:
        files: ./helm/templates/
        policy: ./policies/

    - name: Run Terrascan
      uses: accurics/terrascan-action@v1.0.0
      with:
        iac_type: terraform
        iac_version: v1
        iac_dir: ./infrastructure/terraform
        policy_type: aws,azure,gcp

    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ./infrastructure/terraform
        framework: terraform
        check: CKV_AWS_*,CKV_AZURE_*,CKV_GCP_*

    - name: Run Snyk IaC scan
      uses: snyk/actions/iac@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: Security Reports
        path: |
          reports/
          trivy-report.json
          kubesec-report.json
          kubeaudit-report.json
          kube-score-report.json
          kubeval-report.json
          conftest-report.json
          terrascan-report.json
          checkov-report.json

    - name: Send security notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()

    - name: Send security email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Security Scan Results
        body: |
          Security scan completed for commit ${{ github.sha }}
          Status: ${{ job.status }}
          Please check the attached reports for details.
        to: security-team@example.com
        from: Security Scanner <security@example.com>
      if: always() 